<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.socket.io/4.3.2/socket.io.min.js" integrity="sha384-KAZ4DtjNhLChOB/hxXuKqhMLYvx3b5MlT55xPEiNmREKRzeEm+RVPlTnAn0ajQNs" crossorigin="anonymous"></script>
    <title>Screen <%= screenNumber %> </title>
</head>
<body>
    <div id="screenNumber" style="display: none;"><%= screenNumber %> </div>
    <video id="video"></video>
    <div id="loading-msg" style="font-size: xx-large;">
        Loading Videos...
    </div>
    <script>
        const socket = io();
        const VideoDownloadedEvent = new Event("videodownloaded");
        const screenNumber = 
            Number(document.getElementById("screenNumber")
                    .innerText);
        const videoObjectURLs = [];
        socket.on("connect",()=>{
            socket.emit("register",{screen:screenNumber});

        })
        let urlsToDownload = undefined;
        socket.on("videos",urls =>{
            urlsToDownload = urls.length;
            urls.forEach(url => {
                fetch("url")
                .then(response => response.blob())
                .then(blob => {
                    videoObjectURLs.push(URL.createObjectURL(blob));
                    videosDownloaded++;
                    window.dispatchEvent(VideoDownloadedEvent);
                })
            })
        })
        
        let videosDownloaded = 0;
        window.addEventListener("videodownloaded", e => {
            if (videosDownloaded == urlsToDownload ){
                //send event back to server telling ready.
            }else{
                console.log(`video ${videosDownloaded} of ${urlsToDownload} downloaded`);
            }
        })
        
    </script>
</body>
</html>